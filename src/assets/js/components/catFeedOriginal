import { Component } from '../classes/component';
import $ from 'jquery';
import forEach from 'lodash/forEach';
import times from 'lodash/times';

var contentful = require('contentful');
var config = require('config');

/**
 *
 *
 * @class categoryFeed
 * @extends {Component}
 */
class categoryFeed extends Component {

  /**
   * Creates an instance of categoryFeed.
   *
   * @memberof categoryFeed
   */
  constructor() {
    super('C18'); //super not working currently

    //check if element exists on the page
    const dataID = 'C18';
    const self = this;
    $("div[data-id]").each(function() {
        // if exists, execute categoryFeed
        if ($(this).data("id") === dataID) {
          self.getPosts(); //send request to get posts
        }
    });
  }

  getPosts() {
    const self = this;

    //contentful initialisation 
    var client = contentful.createClient({
      space: config.config.space,
      accessToken: config.config.accessToken
    });
    
    // on page load check URL for page=X 
    var query = window.location.search.substring(1);
    var page = '';
    var category = '';
    var vars = query.split("&");

    forEach(vars, function (el) {
        var pair = el.split("=");

        if(pair[0] == 'page'){
            page = Number(pair[1]); //convert result to a number
        }

        if(pair[0] == 'category'){
            category = pair[1].toLowerCase(); //convert result to a number
        }
    });

    // from contentful, get the total number of entries, and set inital limits
    var totalPosts = 0; //create var for total number of posts and set to a number
    var numPages; // create var for the total number of pages
    const perPage = 1; //limit number of posts per page
    var toSkip = page * perPage; //calculate what post to load from 

    //if page number exists in URL, run the getEntries again and set the pagination/blog posts to the right page
    if (page > 0) {
      //request entries, starting from the Xth entry (toSkip)
      client.getEntries({
        content_type: '2wKn6yEnZewu2SCCkus4as',
        limit: perPage,
        skip: toSkip
      })
      .then((response) => {
          var categories = '';
          const feedCont = $('#category-feed-cont');

            //create the element you will be plugging into the blog feed container
            var html = '';
          
          //get down to categories array
          forEach(response.items, (entry) => {
              categories = entry.fields.category;
              var postCategory = '';
            //run foreach over cat array
              forEach(categories, (postCategory) => {
                  postCategory = postCategory.fields.title.toLowerCase();
                  console.log(typeof postCategory, 4000);

                  if (postCategory == category ) {
                    console.log('match!');
                    totalPosts += 1; // every time the category matches that in the URL, +1 total posts

                    console.log(entry, 5000);

                    var postURL = window.location.origin + '/blog-post.html?id=' + entry.sys.id;

                    //TODO swap this out with handlebars templating
                    var blogTile = '<div data-id="A07" class="A07-blog-feed-tile small-12">'
                                    + '<div class="bf-feature-image">'
                                        + '<img src="https:' + entry.fields.featuredImage.fields.file.url + '" alt="' + entry.fields.featuredImage.fields.description + '">' 
                                    + '</div>'
                                    + '<div class="bf-content-overlap">'
                                        + '<div class="bf-heading">'
                                        + '<h2>' + entry.fields.title + '</h2>'
                                        + '</div>'
                                        + '<div class="bf-desc">'
                                        + '<p>' + entry.fields.postPreview + '</p>'
                                        + '</div>'
                                        + '<div class="bf-button button bold"><a href="' + postURL + '">Read post</a></div>'
                                    + '</div>'
                                    + '</div>';
                    
                    //add the entry to the element
                    html = html + blogTile;

                  }
              });
          });

          //append to page
          feedCont.html(html);
          console.log(totalPosts, 'for pages > 0');
          numPages = Math.round(totalPosts / perPage); // divide by the number to dispay per page, round up to whole number (eg if there are 22 entried you need 3 pages)

          categoryFeed.pagination(numPages);
      })
      .catch(console.error);

    //if page number is not in URL, or it is equal to 0, get entries and set to the first page
    } else {
      //request entries, displaying posts from the 1st entry
      client.getEntries({
        content_type: '2wKn6yEnZewu2SCCkus4as',
        limit: perPage,
        skip: 0
      })
      .then((response) => {
        //count the number of posts within the specified category
        //   var categories = response.items.fields.category;
          console.log(typeof category, 2000);
          var categories = '';
          const feedCont = $('#category-feed-cont');

            //create the element you will be plugging into the blog feed container
            var html = '';
          
          //get down to categories array
          forEach(response.items, (entry) => {
              categories = entry.fields.category;
              var postCategory = '';
            //run foreach over cat array
              forEach(categories, (postCategory) => {
                  postCategory = postCategory.fields.title.toLowerCase();
                  console.log(typeof postCategory, 4000);

                  if (postCategory == category ) {
                    // console.log('match!');
                    totalPosts += 1; // every time the category matches that in the URL, +1 total posts

                    console.log(entry, 5000);

                    var postURL = window.location.origin + '/blog-post.html?id=' + entry.sys.id;

                    //TODO swap this out with handlebars templating
                    var blogTile = '<div data-id="A07" class="A07-blog-feed-tile small-12">'
                                    + '<div class="bf-feature-image">'
                                        + '<img src="https:' + entry.fields.featuredImage.fields.file.url + '" alt="' + entry.fields.featuredImage.fields.description + '">' 
                                    + '</div>'
                                    + '<div class="bf-content-overlap">'
                                        + '<div class="bf-heading">'
                                        + '<h2>' + entry.fields.title + '</h2>'
                                        + '</div>'
                                        + '<div class="bf-desc">'
                                        + '<p>' + entry.fields.postPreview + '</p>'
                                        + '</div>'
                                        + '<div class="bf-button button bold"><a href="' + postURL + '">Read post</a></div>'
                                    + '</div>'
                                    + '</div>';
                    
                    //add the entry to the element
                    html = html + blogTile;

                  }
              });
          });

          //append to page
          feedCont.html(html);
          
          console.log(totalPosts, 'for pages < 0');

          numPages = Math.round(totalPosts / perPage); 
          categoryFeed.pagination(numPages);
      })
      .catch(console.error);
    }
  }

  static createPosts (entry) {

  }

  static pagination(numPages) {
    var html = '';
    var pagination = $('.pagination');

    times(numPages, (page) => {
      console.log('how many times'); //TO DO ADD CATEGORY TO THE URL HERE
      var createItem = '<li><a href="' + window.location.origin + '/category.html?page=' + page + '">' + (page + 1) + '</a></li>';
      
      html = html + createItem;
    });

    pagination.html(html);
  }
}

export { categoryFeed };